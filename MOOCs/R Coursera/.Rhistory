install("Rcmdr")
install.packages("Rcmdr")
x <- c(10,11,13,-1,6,3)
est.x <- c(mean(x), var(x), sd(x))
rm(x)
rm(est.x)
c(0:10, 50)
median(x)
x <- c(0:10, 50)
median(x)
mean(x, trim=0.5)
mean(x)
help("mean")
help(rnorm)
rnorm(5)
rnorm(7)
sim.n <- rnorm(1000, 5, 2)
hist(sim.n)
help(rnorm)
mean(sim.n)
sd(sim.n)
help(summary)
summary(sim.n)
2 > 3
x <- c(-2, 1, -1, -1, 3, 6, 1)
posit <- x > 0
x[posit]
rm(sim.n)
x <- c(2,1,0,3,6,1)
x[1:3]
x[2*1:3]
2*1:3
ls
ls()
objects()
rm()
help("mean")
help("exp")
exp(2)
x = 1:5
x
y <- logical(4)
help(logical)
y <- logical(4, TRUE)
f <- as.factor(c(1,2,3,1,2,1,1,3,2))
f
levels(f) <- c("Bajo", "Medio", "Alto")
f
ford <- as.ordered(f)
ford
paste(c("X"), 1:10, sep="")
pi:1
pi
seq(0,1,length = 10)
seq(1,5, by=0.5)
-1:1/0
rep(1:4, 2)
rep(1:4, c(2,3,1,2))
sequence(c(2,3))
?sequence
sequence(c(2,3,4))
x <- c(1:10)
x
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
y <- sample(5:15, 5)
rm(f)
rm(ford)
rm(posit)
rm(x)
rm(y)
x <- letter()
x <- letters()
x <- letters
x[c(13,1,18,9,15)]
paste(letters[c(13,1,18,9,15)])
paste(letters[c(13,1,18,9,15)], collapse = "")
q()
x <- rbinom(100,5,0.3)
par(mfrow=c(2,2))
dotplot(x)
library(lattice)
dotplot(x)
?par
dotplot(x)
par(mfrow=c(1,1))
dotplot(x)
plot(x, type="h")
barplot(table(x), col=rainbow(length(table(x))))
par(mfrow=c(2,2))
barplot(table(x), col=rainbow(length(table(x))))
dotplot(x)
plot(x, type="h")
barplot(table(x), col=rainbow(length(table(x))))
?par
pie(table(x))
x <- rnorm(100,2)
barplot(x)
barplot(table(x))
x <- rnorm(100, 5.0, 0.3)
barplot(table(x))
barplot(x)
rm(x)
y <- rnorm(100)
y.f <- rbinom(100, 5, 0.3)
stem(y)
plot(y)
barpot(y)
barplot(y)
par(mfrow = c(2,2))
m <- mean(par("usr")[1:2])
boxplot(y)
boxplot(y~y.f)
boxplot(split(y, y.f), col="cyan")
stripchart(y)
stripchart(y, method="jitter", add=T, at=1.2)
data("VADeaths")
dotchart(VADeaths)
dotchart(VADeaths)
VADeaths
data("quakes")
coplot(lat~long | depth, data = quakes)
X <- matrix(rnorm(1000), ncol = 2)
colnames(X) <- c("a", "b")
plot(X)
X <- matrix(rnorm(1000), ncol = 5)
X
colnames(X) <- c("a", "id", "edad", "loc", "peso")
pairs(x)
pairs(X)
data("iris")
razas <- unclass(iris$Species)
plot(iris[1:2], pch= 21, bg = c("red", "green3", "blue")[razas])
razas
iris[1:2]
iris
iris[1,1]
iris[1:1]
iris[2:1]
iris[2:2]
iris[,2]
hist(rnorm(1000))
hist(rnorm(1000), 5)
hist(rnorm(1000), 3)
y <- rnorm(500)
qqnorm(y)
qqline(y)
y.t <- rt(500, 3)
qqplot(y, y.t)
qqline(y)
library(lattice)
qqmath(y, distribution=function(p){qt(p, df=5)})
dev.list()
estaturas <- c(1.65, 1.55, 1.78, 1.81, 1.90, 1.5, 1.52, 1.95, 1.6, 1.72, 1.8)
ciudades <- as.factor(rep(c(1,2,3), c(3,4,4)))
levels(ciudades) <- c("Elche", "Alicante", "Albacete")
mean(estaturas)
?by
by(estaturas, ciudades, mean)
x <- seq(-pi, pi, length=100)
x
aux <- matrix(c(sin(x), cos(x)), ncol=2)
aux
?matrix
colnames(aux) <- c("sin", "cos")
aux
matplot(x, aux, type="l", col=c(1,2), ylab="seno, coseno")
matplot(x, aux, type="l", col=c(1,2), ylab="seno, coseno", ylim=c(-2,2))
legend(-pi, 2, c("sin(x)", "cos(x)"), lty = c(1,1), col = c(1,2))
help(legend)
?bwplot
bwplot(irirs)
iris
t.test(PH, mu=4)
?t.test
x <- rnorm(100,3)
x
t.test(x, mu = 3)
t.test(x, mu = 5)
x <- sample(1:10, 10, replace = T)
x
x <- sample(1:10, 10, replace = F)
x
x <- sample(1:10, 10, replace = T)
x
wilcox.test(x, mu = 5)
t.test(x, mu = 3)
t.test(x, mu = 3, alternative = "greater")
setwd("~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera")
ls()
dic()
dir()
x <- read.csv("hw1_data.csv")
x
extract <- x[1:2,]
extract
lengt(x)
length(x)
x
nrows(x)
nrow(x)
extract <- x[-1,]
extract
x[nrow(x) -1 : nrow(x),]
x[nrow(x) -2 : nrow(x),]
a <- x[nrow(x) -2 : nrow(x),]
a
a[1:2,]
x[length(x) - 2]
x[length(x) - 2, ]
x[nrow(x) - 2, ]
x[nrow(x) - 2 : nrow(x), ]
x[nrow(x) - 2 : , ]
x[47,]
attach(x)
x$Ozone
table(x$Ozone)
sum(is.na(x$Ozone))
mean(x$Ozone)
?mean
mean(x$Ozone, na.rm = T)
tail(x, 2)
s <- x[x$Ozone > 31 & x$Temp > 90]
s <- x[x$Ozone > 31 & x$Temp > 90, ]
s
subsetMonth = x[x$Month == 6]
subsetMonth = x[x$Month == 6,]
subsetMonth
attach(subsetMonth)
detach(x)
attach(subsetMonth)
subsetMonth$Temp
mean(subsetMonth$Temp)
detach(subsetMonth)
subsetMonth <- x[x["Mont"] == 5, ]
subsetMonth <- x[x["Month"] == 5, ]
max(subsetMonth$Ozone)
max(subsetMonth$Ozone, na.rm = T)
install.packages("swirl")
library("swirl")
ls
ls()
rm(list=ls())
install_from_swirl("R Programming")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0, 10)
c(1,2,3,4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive = T)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, tiemes = 40)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Edgar")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep="-")
