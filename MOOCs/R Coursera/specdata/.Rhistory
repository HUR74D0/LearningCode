install("Rcmdr")
install.packages("Rcmdr")
x <- c(10,11,13,-1,6,3)
est.x <- c(mean(x), var(x), sd(x))
rm(x)
rm(est.x)
c(0:10, 50)
median(x)
x <- c(0:10, 50)
median(x)
mean(x, trim=0.5)
mean(x)
help("mean")
help(rnorm)
rnorm(5)
rnorm(7)
sim.n <- rnorm(1000, 5, 2)
hist(sim.n)
help(rnorm)
mean(sim.n)
sd(sim.n)
help(summary)
summary(sim.n)
2 > 3
x <- c(-2, 1, -1, -1, 3, 6, 1)
posit <- x > 0
x[posit]
rm(sim.n)
x <- c(2,1,0,3,6,1)
x[1:3]
x[2*1:3]
2*1:3
ls
ls()
objects()
rm()
help("mean")
help("exp")
exp(2)
x = 1:5
x
y <- logical(4)
help(logical)
y <- logical(4, TRUE)
f <- as.factor(c(1,2,3,1,2,1,1,3,2))
f
levels(f) <- c("Bajo", "Medio", "Alto")
f
ford <- as.ordered(f)
ford
paste(c("X"), 1:10, sep="")
pi:1
pi
seq(0,1,length = 10)
seq(1,5, by=0.5)
-1:1/0
rep(1:4, 2)
rep(1:4, c(2,3,1,2))
sequence(c(2,3))
?sequence
sequence(c(2,3,4))
x <- c(1:10)
x
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
y <- sample(5:15, 5)
rm(f)
rm(ford)
rm(posit)
rm(x)
rm(y)
x <- letter()
x <- letters()
x <- letters
x[c(13,1,18,9,15)]
paste(letters[c(13,1,18,9,15)])
paste(letters[c(13,1,18,9,15)], collapse = "")
q()
x <- rbinom(100,5,0.3)
par(mfrow=c(2,2))
dotplot(x)
library(lattice)
dotplot(x)
?par
dotplot(x)
par(mfrow=c(1,1))
dotplot(x)
plot(x, type="h")
barplot(table(x), col=rainbow(length(table(x))))
par(mfrow=c(2,2))
barplot(table(x), col=rainbow(length(table(x))))
dotplot(x)
plot(x, type="h")
barplot(table(x), col=rainbow(length(table(x))))
?par
pie(table(x))
x <- rnorm(100,2)
barplot(x)
barplot(table(x))
x <- rnorm(100, 5.0, 0.3)
barplot(table(x))
barplot(x)
rm(x)
y <- rnorm(100)
y.f <- rbinom(100, 5, 0.3)
stem(y)
plot(y)
barpot(y)
barplot(y)
par(mfrow = c(2,2))
m <- mean(par("usr")[1:2])
boxplot(y)
boxplot(y~y.f)
boxplot(split(y, y.f), col="cyan")
stripchart(y)
stripchart(y, method="jitter", add=T, at=1.2)
data("VADeaths")
dotchart(VADeaths)
dotchart(VADeaths)
VADeaths
data("quakes")
coplot(lat~long | depth, data = quakes)
X <- matrix(rnorm(1000), ncol = 2)
colnames(X) <- c("a", "b")
plot(X)
X <- matrix(rnorm(1000), ncol = 5)
X
colnames(X) <- c("a", "id", "edad", "loc", "peso")
pairs(x)
pairs(X)
data("iris")
razas <- unclass(iris$Species)
plot(iris[1:2], pch= 21, bg = c("red", "green3", "blue")[razas])
razas
iris[1:2]
iris
iris[1,1]
iris[1:1]
iris[2:1]
iris[2:2]
iris[,2]
hist(rnorm(1000))
hist(rnorm(1000), 5)
hist(rnorm(1000), 3)
y <- rnorm(500)
qqnorm(y)
qqline(y)
y.t <- rt(500, 3)
qqplot(y, y.t)
qqline(y)
library(lattice)
qqmath(y, distribution=function(p){qt(p, df=5)})
dev.list()
estaturas <- c(1.65, 1.55, 1.78, 1.81, 1.90, 1.5, 1.52, 1.95, 1.6, 1.72, 1.8)
ciudades <- as.factor(rep(c(1,2,3), c(3,4,4)))
levels(ciudades) <- c("Elche", "Alicante", "Albacete")
mean(estaturas)
?by
by(estaturas, ciudades, mean)
x <- seq(-pi, pi, length=100)
x
aux <- matrix(c(sin(x), cos(x)), ncol=2)
aux
?matrix
colnames(aux) <- c("sin", "cos")
aux
matplot(x, aux, type="l", col=c(1,2), ylab="seno, coseno")
matplot(x, aux, type="l", col=c(1,2), ylab="seno, coseno", ylim=c(-2,2))
legend(-pi, 2, c("sin(x)", "cos(x)"), lty = c(1,1), col = c(1,2))
help(legend)
?bwplot
bwplot(irirs)
iris
t.test(PH, mu=4)
?t.test
x <- rnorm(100,3)
x
t.test(x, mu = 3)
t.test(x, mu = 5)
x <- sample(1:10, 10, replace = T)
x
x <- sample(1:10, 10, replace = F)
x
x <- sample(1:10, 10, replace = T)
x
wilcox.test(x, mu = 5)
t.test(x, mu = 3)
t.test(x, mu = 3, alternative = "greater")
installed.packages()
library("swirl")
swirl()
c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
help()
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
c(my_char, "Edgar")
my_name <- c(my_char, "Edgar")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo=11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
rm(list = ls())
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matriz <- my_vector
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnaes <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
library("swirl")
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 != 7)
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical("twins", "twins")
xor(5 == 6, FALSE)
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function
submit
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
reaminder(11,5)
remainder(11,5)
remainder(divisor=11, num = 5)
remainder(4, div=2)
args(remainder)
submit
submit()
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){tail(x,1)}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hello", "buddy")
submit()
submit()
mad_libs(place = "Valencia", adjective="Stressful", noun="Edgar")
submit()
'I %p% love %p% R!'
'I' %p% 'love' %p% 'R!'
quit()
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
polluteFileName(2)
nchar(polluteFileName(2))
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
polluteFileName(2)
polluteFileName(10)
polluteFileName(300)
data <- read.csv("001.csv")
setwd("~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata")
data <- read.csv("001.csv")
data
data[, 2]
data[1:5,]
data[1:5,"sulfate"]
result
result <- NA
result[] <- 2
result
result[] <- 3
result
result[length(result) + 1] <- 4
result
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
pollutantmean(pollutant = "sulfate", id = 1:5)
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
pollutantmean(pollutant = "sulfate", id = 1:5)
pollutantmean(pollutant = "sulfate", id = 1:200)
pollutantmean(pollutant = "sulfate", id = 1:10)
pollutantmean(pollutant = "sulfate", id = 23)
mean(data[, "nitrate"], na.rm = T)
pollutantmean(pollutant = "nitrate", id = 23)
pollutantmean(pollutant = "nitrate", id = 1:10)
pollutantmean(pollutant = "sulfate", id = 1:10)
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
pollutantmean(pollutant = "sulfate", id = 1:10)
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
pollutantmean(pollutant = "sulfate", id = 1:10)
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
pollutantmean(pollutant = "sulfate", id = 1:10)
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
pollutantmean(pollutant = "sulfate", id = 1:10)
length(pollutantmean(pollutant = "sulfate", id = 1:10))
mean(pollutantmean(pollutant = "sulfate", id = 1:10))
mean(pollutantmean(pollutant = "nitrate", id = 23))
pollutantmean(pollutant = "nitrate", id = 23)
pollutantmean(pollutant = "nitrate", id = 1)
pollutantmean(pollutant = "nitrate", id = 1:10)
pollutantmean(pollutant = "nitrate", id = 20)
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
pollutantmean(pollutant = "nitrate", id = 20)
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
pollutantmean(pollutant = "nitrate", id = 20)
pollutantmean(pollutant = "nitrate", id = 23)
pollutantmean(pollutant = "nitrate", id = 1:10)
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
pollutantmean(pollutant = "nitrate", id = 1:10)
pollutantmean(pollutant = "sulfate", id = 1:10)
pollutantmean(pollutant = "nitrate", id = 70:72)
v <- 1:10
result <- c(result, 1:5)
rm(result)
result <- c(result, 1:5)
source('~/Documents/git-repos/CodeLearningMaterial/MOOCs/R Coursera/specdata/pollutantmean.R')
pollutantmean(pollutant = "nitrate", id = 70:72)
pollutantmean(pollutant = "sulfate", id = 1:10)
